// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/contact": {
            "post": {
                "description": "Add a contact",
                "tags": [
                    "Contact"
                ],
                "summary": "Add Contact",
                "parameters": [
                    {
                        "description": "Add a contact request",
                        "name": "requestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/contact.AddContact"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/repos.Contact"
                        }
                    }
                }
            }
        },
        "/contact/{id}": {
            "get": {
                "description": "Get a contact by id",
                "tags": [
                    "Contact"
                ],
                "summary": "GetByID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The id of the contact",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "put": {
                "description": "Update",
                "tags": [
                    "Contact"
                ],
                "summary": "Update",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The id of the contact",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Add a contact request",
                        "name": "requestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/contact.UpdateContact"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "delete": {
                "description": "Delete a contact",
                "tags": [
                    "Contact"
                ],
                "summary": "Delete",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The id of the contact",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/contacts": {
            "get": {
                "description": "Get all the contacts",
                "tags": [
                    "Contact"
                ],
                "summary": "GetAll",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/repos.Contact"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "contact.AddContact": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "lastname": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                }
            }
        },
        "contact.UpdateContact": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "lastname": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "repos.Contact": {
            "type": "object",
            "properties": {
                "create_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "lastname": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Contact API",
	Description:      "Contact API",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
